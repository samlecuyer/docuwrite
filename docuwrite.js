#!/usr/bin/env sorrow
/*
 copyright 2012 sam l'ecuyer
*/

var fs   = require('fs');
var out  = require('system').stdout;
var args = require('system').args;

/**
  @{ "module": "docuwrite",
     "exports": ["processFile"],
     "author": "sam l'ecuyer",
     "copyright": " 2012 sam l'ecuyer",
     "description": "A sorrow module for markdown documentation generation",
     "usage": "`docuwrite.js [file to document]`" }
 */

var commentsRegex = /(\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\/)|(\/\/.*)/g;
var docBlockRegex = /@\{(.|[\r\n])*\}/g

function processHeader(block, s) {
    if (block.module) {
        s.writeLine('# '+block.module +'\n');
    }
    if (block.description) {
        s.writeLine(block.description +'\n');
    }
    if (block.author) {
        s.writeLine('Author: '+block.author +'\n');
    }
    if (block.copyright) {
        s.writeLine('Copyright: '+block.copyright +'\n');
    }
    if (block.exports) {
        s.writeLine('Exports:\n');
        for (i in block.exports) {
            s.writeLine('  * '+block.exports[i]);
        }
        out.writeLine();
    }
     if (block.usage) {
        s.writeLine('Usage: '+block.usage +'\n');
    }
}


function processBlock(block, s) {
    if (block.name) {
        s.writeLine('## '+block.name +'\n');
    }
    if (block.args) {
        s.writeLine('Args:\n');
        for (i in block.args) {
            s.writeLine('  * '+block.args[i]);
        }
        out.writeLine();
    }
    if (block.returns) {
        s.writeLine('Returns: '+block.returns +'\n');
    }
    if (block.description) {
        s.writeLine(block.description +'\n');
    }
}

/**
  @{ "name": "processFile",
     "args": ["fileName", "stream"],
     "returns": "none",
     "description": "This is the main function that processes a doc'd file.  It takes a filename of a doc'd file and a TextStream to write the result to." }
 */

exports.processFile = processFile; 
function processFile(fileName, stream) {
	var fileText = fs.open(fileName, 'rb').read().decodeToString('utf-8');
	
	var comments = fileText.match(commentsRegex);
    comments.forEach(function(comment) {
        var blocks = comment.match(docBlockRegex);
        if (blocks) {
            var obj = JSON.parse(blocks[0].substr(1));
            if (obj.module) {
                processHeader(obj, stream);
            } else {
                processBlock(obj, stream);
            }
        }
    });
    stream.writeLine(' - - - \n');
}

function runMain() {
    if (args.length == 1) {
        out.writeLine('please provide at least one javascript source file');
        return;
    }
    processFile(args[1], out);
    out.writeLine('this documentation was generated by docuwrite'); 
} 

if (module.id == require.main) {
	runMain();
}